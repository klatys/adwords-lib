<?php
/*
 * File generated by ClassyFile <https://github.com/onema/classyfile>
 * (c) 2015, Juan Manuel Torres
 *
 * For the full copyright and license information,
 * please view the LICENSE file that was distributed
 * with this source code.
 */
namespace Google\Api\Ads\AdWords\v201506;
use Google\Api\Ads\AdWords\Lib\AdWordsSoapClient;

/**
   * FeedService
   * @package Google_Api_Ads_AdWords_v201506
   * @subpackage v201506
   */
class FeedService extends AdWordsSoapClient
{
    const SERVICE_NAME = 'FeedService';
    const WSDL_NAMESPACE = 'https://adwords.google.com/api/adwords/cm/v201506';
    const ENDPOINT = 'https://adwords.google.com/api/adwords/cm/v201506/FeedService';
    /**
     * The endpoint of the service
     * @var string
     */
    public static $endpoint = 'https://adwords.google.com/api/adwords/cm/v201506/FeedService';
    /**
     * Default class map for wsdl=>php
     * @access private
     * @var array
     */
    public static $classmap = array(
        'AuthenticationError'             => AuthenticationError::class,
        'AuthorizationError'              => AuthorizationError::class,
        'ClientTermsError'                => ClientTermsError::class,
        'DateRange'                       => DateRange::class,
        'DistinctError'                   => DistinctError::class,
        'EntityCountLimitExceeded'        => EntityCountLimitExceeded::class,
        'EntityNotFound'                  => EntityNotFound::class,
        'FeedAttribute'                   => FeedAttribute::class,
        'FeedError'                       => FeedError::class,
        'IdError'                         => IdError::class,
        'InternalApiError'                => InternalApiError::class,
        'NewEntityCreationError'          => NewEntityCreationError::class,
        'NotEmptyError'                   => NotEmptyError::class,
        'NullError'                       => NullError::class,
        'OAuthInfo'                       => OAuthInfo::class,
        'OperationAccessDenied'           => OperationAccessDenied::class,
        'OrderBy'                         => OrderBy::class,
        'Paging'                          => Paging::class,
        'Predicate'                       => Predicate::class,
        'QueryError'                      => QueryError::class,
        'QuotaCheckError'                 => QuotaCheckError::class,
        'RangeError'                      => RangeError::class,
        'RateExceededError'               => RateExceededError::class,
        'ReadOnlyError'                   => ReadOnlyError::class,
        'RejectedError'                   => RejectedError::class,
        'RequestError'                    => RequestError::class,
        'RequiredError'                   => RequiredError::class,
        'SelectorError'                   => SelectorError::class,
        'SizeLimitError'                  => SizeLimitError::class,
        'SoapHeader'                      => SoapRequestHeader::class,
        'SoapResponseHeader'              => SoapResponseHeader::class,
        'StringLengthError'               => StringLengthError::class,
        'PlacesLocationFeedData'          => PlacesLocationFeedData::class,
        'DatabaseError'                   => DatabaseError::class,
        'SystemFeedGenerationData'        => SystemFeedGenerationData::class,
        'ApiError'                        => ApiError::class,
        'ApiException'                    => ApiException::class,
        'ApplicationException'            => ApplicationException::class,
        'Feed'                            => Feed::class,
        'FeedOperation'                   => FeedOperation::class,
        'FeedPage'                        => FeedPage::class,
        'FeedReturnValue'                 => FeedReturnValue::class,
        'ListReturnValue'                 => ListReturnValue::class,
        'NullStatsPage'                   => NullStatsPage::class,
        'Operation'                       => Operation::class,
        'Page'                            => Page::class,
        'Selector'                        => Selector::class,
        'AuthenticationError.Reason'      => AuthenticationErrorReason::class,
        'AuthorizationError.Reason'       => AuthorizationErrorReason::class,
        'ClientTermsError.Reason'         => ClientTermsErrorReason::class,
        'DatabaseError.Reason'            => DatabaseErrorReason::class,
        'DistinctError.Reason'            => DistinctErrorReason::class,
        'EntityCountLimitExceeded.Reason' => EntityCountLimitExceededReason::class,
        'EntityNotFound.Reason'           => EntityNotFoundReason::class,
        'Feed.Origin'                     => FeedOrigin::class,
        'Feed.Status'                     => FeedStatus::class,
        'FeedAttribute.Type'              => FeedAttributeType::class,
        'FeedError.Reason'                => FeedErrorReason::class,
        'IdError.Reason'                  => IdErrorReason::class,
        'InternalApiError.Reason'         => InternalApiErrorReason::class,
        'NewEntityCreationError.Reason'   => NewEntityCreationErrorReason::class,
        'NotEmptyError.Reason'            => NotEmptyErrorReason::class,
        'NullError.Reason'                => NullErrorReason::class,
        'OperationAccessDenied.Reason'    => OperationAccessDeniedReason::class,
        'Operator'                        => Operator::class,
        'Predicate.Operator'              => PredicateOperator::class,
        'QueryError.Reason'               => QueryErrorReason::class,
        'QuotaCheckError.Reason'          => QuotaCheckErrorReason::class,
        'RangeError.Reason'               => RangeErrorReason::class,
        'RateExceededError.Reason'        => RateExceededErrorReason::class,
        'ReadOnlyError.Reason'            => ReadOnlyErrorReason::class,
        'RejectedError.Reason'            => RejectedErrorReason::class,
        'RequestError.Reason'             => RequestErrorReason::class,
        'RequiredError.Reason'            => RequiredErrorReason::class,
        'SelectorError.Reason'            => SelectorErrorReason::class,
        'SizeLimitError.Reason'           => SizeLimitErrorReason::class,
        'SortOrder'                       => SortOrder::class,
        'StringLengthError.Reason'        => StringLengthErrorReason::class,
        'get'                             => FeedServiceGet::class,
        'getResponse'                     => FeedServiceGetResponse::class,
        'mutate'                          => FeedServiceMutate::class,
        'mutateResponse'                  => FeedServiceMutateResponse::class,
        'query'                           => Query::class,
        'queryResponse'                   => QueryResponse::class,
    );

    /**
     * Constructor using wsdl location and options array
     * @param string $wsdl WSDL location for this service
     * @param array $options Options for the SoapClient
     */
    public function __construct($wsdl, $options, $user)
    {
        $options['classmap'] = self::$classmap;
        parent::__construct($wsdl, $options, $user, self::SERVICE_NAME, self::WSDL_NAMESPACE);
    }
    /**
     * <span class="constraint Required">This field is required and should not be {@code null}.</span>
     * 
     * 
     * 
     * Returns a list of Feeds that meet the selector criteria.
     * 
     * @param selector Determines which Feeds to return. If empty all
     * Feeds are returned.
     * @return The list of Feeds.
     * @throws ApiException Indicates a problem with the request.
     */
    public function get($selector)
    {
        $args = new FeedServiceGet($selector);
        $result = $this->__soapCall('get', array($args));
        return $result->rval;
    }
    /**
     * <span class="constraint ContentsNotNull">This field must not contain {@code null} elements.</span>
     * <span class="constraint DistinctIds">Elements in this field must have distinct IDs for following {@link Operator}s : SET, REMOVE.</span>
     * <span class="constraint NotEmpty">This field must contain at least one element.</span>
     * <span class="constraint Required">This field is required and should not be {@code null}.</span>
     * 
     * 
     * 
     * Add, remove, and set Feeds.
     * 
     * @param operations The operations to apply.
     * @return The resulting Feeds.
     * @throws ApiException Indicates a problem with the request.
     */
    public function mutate($operations)
    {
        $args = new FeedServiceMutate($operations);
        $result = $this->__soapCall('mutate', array($args));
        return $result->rval;
    }
    /**
     * <span class="constraint Required">This field is required and should not be {@code null}.</span>
     * 
     * 
     * 
     * Returns the list of Feed that match the query.
     * 
     * @param query The SQL-like AWQL query string.
     * @returns A list of Feed.
     * @throws ApiException if problems occur while parsing the query or fetching Feed.
     */
    public function query($query)
    {
        $args = new Query($query);
        $result = $this->__soapCall('query', array($args));
        return $result->rval;
    }
}
